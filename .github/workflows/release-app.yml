###############################################################################
# RELEASE APPS
###############################################################################
name: Release APPs
on:
  repository_dispatch:
    types: [trigger-workflow]

###############################################################################
# JOBS
###############################################################################

jobs:
  release:
    permissions:
      contents: write
      deployments: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
        #   - platform: 'macos-latest'
        #     args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
          - platform: 'ubuntu-22.04'
          - platform: 'windows-latest'

    runs-on: ${{ matrix.settings.platform }}
    env:
      TAG_VERSION: ${{ github.event.client_payload.app_version }}
    steps:

      #########################################################################
      # INIT & INSTALL
      #########################################################################

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin
          
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm' # Set this to npm, yarn or pnpm.

      - name: Get package.json name
        id: pkg
        run: |
          echo "name=$(jq -r '.extra.productName' ./package.json)" >> $GITHUB_OUTPUT

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: pnpm install 

      #########################################################################
      # BUILD
      #########################################################################

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          projectPath: 'packages/app'
          tagName: "${{ env.TAG_VERSION }}" 
          releaseName: '${{ steps.pkg.outputs.name }} v__VERSION__'
          releaseBody: '${{ steps.pkg.outputs.name }} apps and extensions v__VERSION__'
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: false
          updaterJsonKeepUniversal: true # @see https://github.com/tauri-apps/tauri-action?tab=readme-ov-file#build-options
          includeRelease: true
          args: ${{ matrix.settings.args }}

